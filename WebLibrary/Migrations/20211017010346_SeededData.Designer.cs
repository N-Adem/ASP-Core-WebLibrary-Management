// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebLibrary.Data;

namespace WebLibrary.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211017010346_SeededData")]
    partial class SeededData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebLibrary.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookGenre")
                        .HasColumnType("int");

                    b.Property<int?>("BookInfoId")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("YearPublished")
                        .HasColumnType("datetime2");

                    b.HasKey("BookId");

                    b.HasIndex("BookInfoId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 12,
                            Author = "JJ Fish",
                            BookGenre = 0,
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 144,
                            Author = "A Mirra",
                            BookGenre = 1,
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            BookId = 1,
                            Author = "Susan M",
                            BookGenre = 2,
                            YearPublished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebLibrary.Models.BookPlacement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookGenre")
                        .HasColumnType("int");

                    b.Property<int>("ColumnNum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BookPlacement");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookGenre = 1,
                            ColumnNum = 1
                        },
                        new
                        {
                            Id = 2,
                            BookGenre = 0,
                            ColumnNum = 2
                        },
                        new
                        {
                            Id = 3,
                            BookGenre = 2,
                            ColumnNum = 3
                        });
                });

            modelBuilder.Entity("WebLibrary.Models.Book", b =>
                {
                    b.HasOne("WebLibrary.Models.BookPlacement", "BookInfo")
                        .WithMany()
                        .HasForeignKey("BookInfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
